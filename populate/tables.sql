DROP DATABASE IF EXISTS dbms;
CREATE DATABASE dbms;
USE dbms;

CREATE TABLE IF NOT EXISTS COURSES(
    COURSE_CODE VARCHAR(10) PRIMARY KEY, 
    COURSE_TITLE VARCHAR(100) UNIQUE
);

CREATE TABLE IF NOT EXISTS LAB_TASK (
    COURSE_CODE VARCHAR(10), 
    LAB_NO INT(5),
    LAB_TITLE VARCHAR(100) UNIQUE, 
    PRIMARY KEY (COURSE_CODE, LAB_NO),
    FOREIGN KEY (COURSE_CODE) REFERENCES COURSES(COURSE_CODE)
);

CREATE TABLE IF NOT EXISTS LAB_INFO (
    LAB_TITLE VARCHAR(100),
    DEADLINE DATE,       
    FOREIGN KEY (LAB_TITLE) REFERENCES LAB_TASK(LAB_TITLE),
    PRIMARY KEY (LAB_TITLE)
);


CREATE TABLE IF NOT EXISTS STUDENT(
    ROLL_NO INT(10), 
    BATCH INT(4), 
    STUDENT_NAME VARCHAR(200), 
    SEMESTER VARCHAR(10),
    EMAIL VARCHAR(100) UNIQUE,
    PASSWORD VARCHAR(100),
    PRIMARY KEY (ROLL_NO),
    CONSTRAINT chk_roll_no CHECK (ROLL_NO BETWEEN 10000 AND 99999)
);

CREATE TABLE IF NOT EXISTS STUDENT_COURSE(
    ROLL_NO INT(10),
    COURSE_CODE VARCHAR(10),
    PRIMARY KEY (ROLL_NO, COURSE_CODE),
    FOREIGN KEY (ROLL_NO) REFERENCES STUDENT(ROLL_NO),
    FOREIGN KEY (COURSE_CODE) REFERENCES COURSES(COURSE_CODE)
);


CREATE TABLE IF NOT EXISTS TEACHER (
    TEACHER_ID INT(10) PRIMARY KEY, 
    TEACHER_NAME VARCHAR(100),
    EMAIL VARCHAR(100) UNIQUE,
    PASSWORD VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS TEACHER_COURSE (
    TEACHER_ID INT(10),
    COURSE_CODE VARCHAR(10),
    PRIMARY KEY (TEACHER_ID, COURSE_CODE),
    FOREIGN KEY (TEACHER_ID) REFERENCES TEACHER(TEACHER_ID),
    FOREIGN KEY (COURSE_CODE) REFERENCES COURSES(COURSE_CODE)
);
CREATE TABLE IF NOT EXISTS QUESTION (
    COURSE_CODE VARCHAR(10), 
    LAB_NO INT(5),
    TASK_NO INT(5),
    QUESTION_TEXT TEXT,
    PRIMARY KEY (COURSE_CODE, LAB_NO, TASK_NO),
    FOREIGN KEY (COURSE_CODE, LAB_NO) REFERENCES LAB_TASK(COURSE_CODE, LAB_NO) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS ANSWER (
    COURSE_CODE VARCHAR(10), 
    LAB_NO INT(5),
    TASK_NO INT(5),
    ROLL_NO INT(10),
    ANSWER_TEXT TEXT,
    PRIMARY KEY (COURSE_CODE, LAB_NO, TASK_NO, ROLL_NO),
    FOREIGN KEY (COURSE_CODE, LAB_NO, TASK_NO) REFERENCES QUESTION(COURSE_CODE, LAB_NO, TASK_NO) ON DELETE CASCADE,
    FOREIGN KEY (ROLL_NO) REFERENCES STUDENT(ROLL_NO) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SUBMISSION (
    SUBMISSION_ID INT AUTO_INCREMENT PRIMARY KEY,
    COURSE_CODE VARCHAR(10),
    ROLL_NO INT(10),
    LAB_NO INT(5),
    STATUS VARCHAR(100),
    SUBMISSION_DATE DATE,
    FOREIGN KEY (ROLL_NO) REFERENCES STUDENT(ROLL_NO),
    FOREIGN KEY (COURSE_CODE, LAB_NO) REFERENCES LAB_TASK(COURSE_CODE, LAB_NO) ON DELETE CASCADE
);